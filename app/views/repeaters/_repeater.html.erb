<%# Copyright 2023, Flexpoint Tech

This file is part of Repeater World.

Repeater World is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General
Public License as published by the Free Software Foundation, either version 3 of the License.

Foobar is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with Foobar. If not, see
<https://www.gnu.org/licenses/>.%>

<div id="<%= dom_id repeater %>" data-controller="repeater">
  <div class="overflow-hidden bg-white shadow sm:rounded-lg border border-gray-200 flex flex-row">
    <div class="flex-1 px-4 py-5 sm:p-0">
      <dl class="sm:divide-y sm:divide-gray-200">
        <%= render partial: "shared/card/entry", locals: { key: "Name", value: repeater.name } %>
        <%= render partial: "shared/card/entry", locals: { key: "Call Sign", value: repeater.call_sign } %>
        <%= render layout: "shared/card/entry", locals: { key: "Web Site" } do %>
          <%= link_to repeater.web_site, repeater.web_site, class: "link" %>
        <% end %>
        <%= render partial: "shared/card/entry", locals: { key: "Band", value: repeater.band } %>
        <%= render partial: "shared/card/entry", locals: { key: "Modes", value: repeater.modes.join(", ") } %>
        <%= render layout: "shared/card/entry", locals: { key: "Operational" } do %>
          <%= render partial: "shared/card/boolean", locals: { value: repeater.operational } %>
        <% end %>
        <%= render layout: "shared/card/entry", locals: { key: "TX Frequency" } do %>
          <%= repeater.tx_frequency / (10 ** 6) %>MHz
        <% end %>
        <%= render layout: "shared/card/entry", locals: { key: "RX Frequency" } do %>
          <div data-action="click->repeater#toggleRxFrequencyFormat"
               class="cursor-pointer">
            <% offset = "#{(repeater.rx_frequency - repeater.tx_frequency > 0) ? "+" : ""}#{((repeater.rx_frequency - repeater.tx_frequency) / (10 ** 3)).to_i}kHz" %>
            <div title="<%= offset %>"
                 data-repeater-target="rxFreqAsFreq">
              <%= repeater.rx_frequency / (10 ** 6) %>MHz
            </div>
            <div title="<%= repeater.rx_frequency / (10 ** 6) %>MHz"
                 data-repeater-target="rxFreqAsOffset"
                 class="hidden">
              <%= offset %>
            </div>
          </div>
        <% end %>
        <%= render layout: "shared/card/entry", locals: { key: "FM" } do %>
          <%= render partial: "shared/card/boolean", locals: { value: repeater.fm } %>
        <% end %>
        <% if repeater.fm? %>
          <%= render partial: "shared/card/entry",
                     locals: { key: "Access Method",
                               value: access_method_name(repeater.access_method) } %>
          <%= render partial: "shared/card/entry",
                     locals: { key: "CTCSS Tone",
                               value: repeater.ctcss_tone } if repeater.access_method == Repeater::CTCSS %>
        <% end %>
        <%= render layout: "shared/card/entry", locals: { key: "D-Star" } do %>
          <%= render partial: "shared/card/boolean", locals: { value: repeater.dstar } %>
        <% end %>
        <%= render layout: "shared/card/entry", locals: { key: "Fusion" } do %>
          <%= render partial: "shared/card/boolean", locals: { value: repeater.fusion } %>
        <% end %>
        <%= render layout: "shared/card/entry", locals: { key: "DMR" } do %>
          <%= render partial: "shared/card/boolean", locals: { value: repeater.dmr } %>
        <% end %>
        <% if repeater.dmr? %>
          <%= render partial: "shared/card/entry", locals: { key: "DMR color code", value: repeater.dmr_color_code } %>
          <%= render partial: "shared/card/entry", locals: { key: "DMR network", value: repeater.dmr_network } %>
        <% end %>
        <%= render layout: "shared/card/entry", locals: { key: "NXDN" } do %>
          <%= render partial: "shared/card/boolean", locals: { value: repeater.nxdn } %>
        <% end %>
        <%= render layout: "shared/card/entry", locals: { key: "Location" } do %>
          <div data-action="click->repeater#changeLocationFormat"
               class="cursor-pointer">
            <div data-repeater-target="locationFormat1">
              <%= [repeater.address, repeater.locality, repeater.region, repeater.post_code, repeater.country.name].reject(&:blank?).join(", ") %>
            </div>
            <div data-repeater-target="locationFormat2" class="hidden">
              Lat: <%= repeater.latitude %>, Long: <%= repeater.longitude %>
            </div>
            <div data-repeater-target="locationFormat3" class="hidden">
              <%= repeater.grid_square %>
            </div>
          </div>
        <% end %>
        <%= render partial: "shared/card/entry", locals: { key: "Channel", value: repeater.channel } if repeater.channel.present? %>
        <%= render partial: "shared/card/entry", locals: { key: "Notes", value: repeater.notes } if repeater.notes.present? %>
        <%= render partial: "shared/card/entry", locals: { key: "Source", value: repeater.source } if repeater.source.present? %>
      </dl>
    </div>
    <div class="flex-1 place-self-stretch
      bg-gray-300"
         data-controller="map"
         data-action="google-maps-callback@window->maps#initializeMap"
         data-map-markers-value="<%=
           [{
              lat: repeater.latitude,
              lng: repeater.longitude,
              tooltip: repeater.call_sign,
              info: "<h1 class='font-bold text-lg link'>#{repeater.name}</h1>
                <p class='link'>#{repeater.call_sign}</p>
                <p>Band: <span class='font-bold'>#{h repeater.band}</span></p>
                <p>Modes: <span class='font-bold'>#{h repeater.modes.join(", ")}</span></p>
                <p>Frequency: <span class='font-bold'>#{h repeater.tx_frequency_in_mhz} #{h repeater.rx_offset_in_khz}</span></p>
                <p>Location: <span class='font-bold'>#{h repeater.location_in_words}</span></p>
                <p>Lat: <span class='font-bold'>#{h repeater.latitude}</span>,
                   Long: <span class='font-bold'>#{h repeater.longitude}</span</p>
                <p>Grid square: <span class='font-bold'>#{h repeater.grid_square}<span></p>" }].to_json %>">
    </div>
  </div>
</div>
